<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="system.attendance.electronic.mapper.ApplicationMapper">
    <resultMap id="BaseResultMap" type="system.attendance.electronic.model.Application">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="begin_date" jdbcType="DATE" property="beginDate"/>
        <result column="end_date" jdbcType="DATE" property="endDate"/>
        <result column="result" jdbcType="TINYINT" property="result"/>
        <result column="type" jdbcType="TINYINT" property="type"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, user_id, begin_date, end_date, result, type
    </sql>
    <select id="selectByExample" parameterType="system.attendance.electronic.model.example.ApplicationExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from eas_application
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="rows != null">
            <if test="offset != null">
                limit ${offset}, ${rows}
            </if>
            <if test="offset == null">
                limit ${rows}
            </if>
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from eas_application
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from eas_application
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="system.attendance.electronic.model.example.ApplicationExample">
        delete from eas_application
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="system.attendance.electronic.model.Application">
        insert into eas_application (id, user_id, begin_date,
                                     end_date, result, type)
        values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{beginDate,jdbcType=DATE},
                #{endDate,jdbcType=DATE}, #{result,jdbcType=TINYINT}, #{type,jdbcType=TINYINT})
    </insert>
    <insert id="insertSelective" parameterType="system.attendance.electronic.model.Application">
        insert into eas_application
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="beginDate != null">
                begin_date,
            </if>
            <if test="endDate != null">
                end_date,
            </if>
            <if test="result != null">
                result,
            </if>
            <if test="type != null">
                type,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="beginDate != null">
                #{beginDate,jdbcType=DATE},
            </if>
            <if test="endDate != null">
                #{endDate,jdbcType=DATE},
            </if>
            <if test="result != null">
                #{result,jdbcType=TINYINT},
            </if>
            <if test="type != null">
                #{type,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="system.attendance.electronic.model.example.ApplicationExample"
            resultType="java.lang.Long">
        select count(*) from eas_application
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update eas_application
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=BIGINT},
            </if>
            <if test="record.beginDate != null">
                begin_date = #{record.beginDate,jdbcType=DATE},
            </if>
            <if test="record.endDate != null">
                end_date = #{record.endDate,jdbcType=DATE},
            </if>
            <if test="record.result != null">
                result = #{record.result,jdbcType=TINYINT},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=TINYINT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update eas_application
        set id = #{record.id,jdbcType=BIGINT},
        user_id = #{record.userId,jdbcType=BIGINT},
        begin_date = #{record.beginDate,jdbcType=DATE},
        end_date = #{record.endDate,jdbcType=DATE},
        result = #{record.result,jdbcType=TINYINT},
        type = #{record.type,jdbcType=TINYINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="system.attendance.electronic.model.Application">
        update eas_application
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="beginDate != null">
                begin_date = #{beginDate,jdbcType=DATE},
            </if>
            <if test="endDate != null">
                end_date = #{endDate,jdbcType=DATE},
            </if>
            <if test="result != null">
                result = #{result,jdbcType=TINYINT},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=TINYINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="system.attendance.electronic.model.Application">
        update eas_application
        set user_id    = #{userId,jdbcType=BIGINT},
            begin_date = #{beginDate,jdbcType=DATE},
            end_date   = #{endDate,jdbcType=DATE},
            result     = #{result,jdbcType=TINYINT},
            type       = #{type,jdbcType=TINYINT}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>