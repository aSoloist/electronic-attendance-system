<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="system.attendance.electronic.mapper.AttendanceMapper">
  <resultMap id="BaseResultMap" type="system.attendance.electronic.model.Attendance">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="begin_time" jdbcType="TIME" property="beginTime" />
    <result column="end_time" jdbcType="TIME" property="endTime" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="month" jdbcType="TINYINT" property="month" />
    <result column="is_workday" jdbcType="TINYINT" property="isWorkday" />
    <result column="day" jdbcType="TINYINT" property="day" />
    <result column="year" jdbcType="INTEGER" property="year" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, begin_time, end_time, status, month, is_workday, day, year
  </sql>
  <select id="selectByExample" parameterType="system.attendance.electronic.model.example.AttendanceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from eas_attendance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from eas_attendance
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from eas_attendance
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="system.attendance.electronic.model.example.AttendanceExample">
    delete from eas_attendance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="system.attendance.electronic.model.Attendance">
    insert into eas_attendance (id, user_id, begin_time, 
      end_time, status, month, 
      is_workday, day, year
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{beginTime,jdbcType=TIME}, 
      #{endTime,jdbcType=TIME}, #{status,jdbcType=TINYINT}, #{month,jdbcType=TINYINT}, 
      #{isWorkday,jdbcType=TINYINT}, #{day,jdbcType=TINYINT}, #{year,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="system.attendance.electronic.model.Attendance">
    insert into eas_attendance
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="beginTime != null">
        begin_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="month != null">
        month,
      </if>
      <if test="isWorkday != null">
        is_workday,
      </if>
      <if test="day != null">
        day,
      </if>
      <if test="year != null">
        year,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="beginTime != null">
        #{beginTime,jdbcType=TIME},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIME},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="month != null">
        #{month,jdbcType=TINYINT},
      </if>
      <if test="isWorkday != null">
        #{isWorkday,jdbcType=TINYINT},
      </if>
      <if test="day != null">
        #{day,jdbcType=TINYINT},
      </if>
      <if test="year != null">
        #{year,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="system.attendance.electronic.model.example.AttendanceExample" resultType="java.lang.Long">
    select count(*) from eas_attendance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update eas_attendance
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.beginTime != null">
        begin_time = #{record.beginTime,jdbcType=TIME},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIME},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.month != null">
        month = #{record.month,jdbcType=TINYINT},
      </if>
      <if test="record.isWorkday != null">
        is_workday = #{record.isWorkday,jdbcType=TINYINT},
      </if>
      <if test="record.day != null">
        day = #{record.day,jdbcType=TINYINT},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update eas_attendance
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      begin_time = #{record.beginTime,jdbcType=TIME},
      end_time = #{record.endTime,jdbcType=TIME},
      status = #{record.status,jdbcType=TINYINT},
      month = #{record.month,jdbcType=TINYINT},
      is_workday = #{record.isWorkday,jdbcType=TINYINT},
      day = #{record.day,jdbcType=TINYINT},
      year = #{record.year,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="system.attendance.electronic.model.Attendance">
    update eas_attendance
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="beginTime != null">
        begin_time = #{beginTime,jdbcType=TIME},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIME},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="month != null">
        month = #{month,jdbcType=TINYINT},
      </if>
      <if test="isWorkday != null">
        is_workday = #{isWorkday,jdbcType=TINYINT},
      </if>
      <if test="day != null">
        day = #{day,jdbcType=TINYINT},
      </if>
      <if test="year != null">
        year = #{year,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="system.attendance.electronic.model.Attendance">
    update eas_attendance
    set user_id = #{userId,jdbcType=BIGINT},
      begin_time = #{beginTime,jdbcType=TIME},
      end_time = #{endTime,jdbcType=TIME},
      status = #{status,jdbcType=TINYINT},
      month = #{month,jdbcType=TINYINT},
      is_workday = #{isWorkday,jdbcType=TINYINT},
      day = #{day,jdbcType=TINYINT},
      year = #{year,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>