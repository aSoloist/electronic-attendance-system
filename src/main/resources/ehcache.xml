<?xml version="1.0" encoding="UTF-8"?>
<config
        xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
        xmlns='http://www.ehcache.org/v3'
        xmlns:jsr107="http://www.ehcache.org/v3/jsr107"
        xsi:schemaLocation="
            http://www.ehcache.org/v3 http://www.ehcache.org/schema/ehcache-core.xsd
            http://www.ehcache.org/v3/jsr107 http://www.ehcache.org/schema/ehcache-107-ext-3.0.xsd">

    <service>
        <jsr107:defaults enable-management="true" enable-statistics="true"/>
    </service>
    <!-- 1、声明一个名为token的Cache-->
    <cache alias="token">
        <!--2、token的键值对被声明为long-string类型，如果没有指明，默认是Object类型。-->
        <key-type>java.lang.Long</key-type>
        <value-type>java.lang.String</value-type>
        <expiry>
            <!-- 
                tti: 设定允许对象处于空闲状态的最长时间.当对象自从最近一次被访问后，
                如果处于空闲状态的时间超过了timeToIdleSeconds属性值，这个对象就会过期
                ttl: 设定对象允许存在于缓存中的最长时间，当对象自从被存放到缓存中后，
                如果处于缓存中的时间超过了timeToLiveSeconds属性值，这个对象就会过期
            -->
            <tti unit="minutes">30</tti> 
        </expiry>
        <resources>
            <!--3、token被声明在堆上保存多达2,000个条目。-->
            <heap unit="entries">2000</heap>
            <!--4、在它开始被驱逐之前，还有多达500 MB的外堆内存-->
            <offheap unit="MB">20</offheap>
        </resources>
    </cache>
    <!--5、<cache-template>可以让你创建一个抽象的<cache>配置文件，该配置文件可以进一步的被扩展。-->
    <cache-template name="myDefaults">
        <key-type>java.lang.Long</key-type>
        <value-type>java.lang.String</value-type>
        <heap unit="entries">200</heap>
    </cache-template>
    <!--6、bar是这样的cache，它使用名为myDefaults的<cache-template>，并将其主键覆盖到更广泛的类型-->
    <cache alias="bar" uses-template="myDefaults">
        <key-type>java.lang.Number</key-type>
    </cache>
    <!--7、simpleCache是另一个cache，它使用myDefaults配置文件作为其唯一的CacheConfiguration-->
    <cache alias="simpleCache" uses-template="myDefaults"/>

</config>